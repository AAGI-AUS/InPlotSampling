% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sbs_pps_estimate.R
\name{sbs_pps_estimate}
\alias{sbs_pps_estimate}
\title{Compute an estimator for SBS PPS sampled data.}
\usage{
sbs_pps_estimate(
  population,
  n,
  y,
  sample_matrix,
  n_bootstraps = 100,
  alpha = 0.05,
  n_cores = getOption("n_cores", 1)
)
}
\arguments{
\item{population}{Population data frame to be sampled with 4 columns.
\enumerate{
\item Halton numbers
\item X1-coordinate of population unit
\item X2-coordinate of population unit
\item Size measurement of population unit
}}

\item{n}{Sample sizes (SBS sample size, PPS sample size).}

\item{y}{Sample response values.}

\item{sample_matrix}{Sample data frame to be sampled with 6 columns.
\enumerate{
\item Halton numbers
\item X1-coordinate of population unit
\item X2-coordinate of population unit
\item Size measurement of population unit
\item Weight
\item Inclusion probability
}}

\item{n_bootstraps}{Number of bootstrap samples.}

\item{alpha}{The significance level.}

\item{n_cores}{The number of cores to be used for computational tasks (specify 0 for max).}
}
\value{
A summary data frame of the estimator.
}
\description{
Compute an estimator for SBS PPS sampled data.
}
\examples{
set.seed(112)

# SBS sample size, PPS sample size
sample_sizes <- c(5, 5)

n_population <- 233
k <- 0:(n_population - 1)
x1 <- sample(1:13, n_population, replace = TRUE) / 13
x2 <- sample(1:8, n_population, replace = TRUE) / 8
y <- (x1 + x2) * runif(n = n_population, min = 1, max = 2) + 1
measured_sizes <- y * runif(n = n_population, min = 0, max = 4)

population <- matrix(cbind(k, x1, x2, measured_sizes), ncol = 4)
sample_result <- sbs_pps_sample(population, sample_sizes)

# estimate the population mean and construct a confidence interval
df_sample <- sample_result$sample
sample_id <- df_sample[, 1]
y_sample <- y[sample_id]

sbs_pps_estimates <- sbs_pps_estimate(
  population, sample_sizes, y_sample, df_sample,
  n_bootstrap = 100, alpha = 0.05
)
print(sbs_pps_estimates)
#>   n1 n2 Estimate  St.error 95\% Confidence intervals
#> 1  5  5    2.849 0.1760682              2.451,3.247

}
